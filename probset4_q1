#!/usr/bin/env/python
# NE334 ProblemSet4 Question 1 
#Part a

import matplotlib.pyplot as plt
import re 
'''
filedata = open('ar.log','r').read()
Time=re.findall(r"Time:\s(\d+\.\d+)", filedata)
Potential= re.findall(r"Potential\senergy:\s(\D?\d+\.\d+)", filedata)
Kinetic= re.findall(r"Kinetic\senergy:\s(\D?\d+\.\d+)", filedata)
Total_Energy=[0]*len(Time)
for i in range(len(Time)):
	Time[i] = float(Time[i])
	Potential[i]= float(Potential[i])
	Kinetic[i]= float(Kinetic[i])
	Total_Energy[i] = Potential[i]+Kinetic[i]

plt.plot(Time,Kinetic, label = 'Kinetic Energy',color='g')
plt.plot(Time,Potential, label = 'Potential Energy', color='b')
plt.plot(Time,Total_Energy, label ='Total Energy', color='r')
plt.ylabel('Energy (J)')
plt.xlabel('Time (s)')
plt.legend(bbox_to_anchor=(1,0.70))
plt.show()
'''

# Part b
'''
filedata= open('change_time','r').read()
Time=re.findall(r"TS=(\d+)",filedata)
Kinetic=re.findall(r"[^/]<K>\s+=\s+(\D?\d+\.\d+)",filedata)
Potential=re.findall(r"[^/]<V>\s+=\s+(\D?\d+\.\d+)",filedata)
Total_Energy=re.findall(r"[^/]<E>\s+=\s+(\D?\d+\.\d+)",filedata)
for i in range(len(Time)):
	Time[i] = float(Time[i])
	Potential[i]= float(Potential[i])
	Kinetic[i]= float(Kinetic[i])
	Total_Energy[i] = float(Total_Energy[i])

plt.plot(Time,Kinetic, label = 'Kinetic Energy',color='g')
plt.plot(Time,Potential, label = 'Potential Energy', color='b')
plt.plot(Time,Total_Energy, label ='Total Energy', color='r')
plt.ylabel('Energy (J)')
plt.xlabel('Time (s)')
plt.legend(bbox_to_anchor=(1,0.90))
plt.show()
'''

# Part c
'''
filedata= open('change_time2','r').read()
Temp=re.findall(r"T=(\d+)",filedata)
Kinetic=re.findall(r"[^/]<K>\s+=\s+(\D?\d+\.\d+)",filedata)
Potential=re.findall(r"[^/]<V>\s+=\s+(\D?\d+\.\d+)",filedata)
Total_Energy=re.findall(r"[^/]<E>\s+=\s+(\D?\d+\.\d+)",filedata)
Fluc_K=re.findall(r"/<K>\s+=\s+(\D?\d+\.\d+)",filedata)
Fluc_P=re.findall(r"/<V>\s+=\s+(\D?\d+\.\d+)",filedata)
Fluc_E=re.findall(r"/<E>\s+=\s+(\D?\d+\.\d+)",filedata)
for i in range(len(Temp)): 
	Temp[i] = float(Temp[i])
	Potential[i]= float(Potential[i])
	Kinetic[i]= float(Kinetic[i])
	Total_Energy[i] = float(Total_Energy[i])
	Fluc_K[i]=float(Fluc_K[i])
	Fluc_P[i]=float(Fluc_P[i])
	Fluc_E[i]=float(Fluc_E[i])

plt.plot(Temp,Kinetic, label = 'Kinetic Energy',color='r')
plt.plot(Temp,Potential, label = 'Potential Energy', color='b')
plt.plot(Temp,Total_Energy, label ='Total Energy', color='y')
plt.xlabel('Temperature (K)')
plt.ylabel(' Energy (J)')
plt.legend(bbox_to_anchor=(1.0,1.0))
plt.show()
plt.plot(Temp,Fluc_K, label ='Fluc_K', color='m')
plt.plot(Temp,Fluc_P, label ='Fluc_P', color='y')
plt.plot(Temp,Fluc_E, label ='Fluc_E', color='k')
plt.xlabel('Temperature (K)')
plt.ylabel(' Energy (J)')
plt.legend(bbox_to_anchor=(1.0,1.0))
plt.show()
'''
# NE334 ProblemSet4 Question 2

#Part a,b
'''
filedata = open('ar.log','r').read()
Time=re.findall(r"Time:\s(\d+\.\d+)", filedata)
Potential= re.findall(r"Potential\senergy:\s(\D?\d+\.\d+)", filedata)
Kinetic= re.findall(r"Kinetic\senergy:\s(\D?\d+\.\d+)", filedata)
Total_Energy=[0]*len(Time)
for i in range(len(Time)):
	Time[i] = float(Time[i])
	Potential[i]= float(Potential[i])
	Kinetic[i]= float(Kinetic[i])
	Total_Energy[i] = Potential[i]+Kinetic[i]
	if Time[i]<=1:
		short_time= i 

# for long Time
plt.plot(Time,Kinetic, label = 'Kinetic Energy',color='g')
plt.plot(Time,Potential, label = 'Potential Energy', color='b')
plt.plot(Time,Total_Energy, label ='Total Energy', color='r')
plt.ylabel('Energy (J)')
plt.xlabel('Time (s)')
plt.legend(bbox_to_anchor=(1,0.70))
plt.show()

# for Short Time
plt.plot(Time[:short_time],Kinetic[:short_time], label = 'Kinetic Energy',color='g')
plt.plot(Time[:short_time],Potential[:short_time], label = 'Potential Energy', color='b')
plt.plot(Time[:short_time],Total_Energy[:short_time], label ='Total Energy', color='r')
plt.ylabel('Energy (J)')
plt.xlabel('Time (s)')
plt.legend(bbox_to_anchor=(1,0.70))
plt.show()
'''
#Part c
